// <auto-generated />
using System;
using AcquaDiCane.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcquaDiCane.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcquaDiCane.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AcquaDiCane.Models.DetalleDelTurno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("PrecioServicio")
                        .HasColumnType("float");

                    b.Property<int>("ServicioAsignadoId")
                        .HasColumnType("int");

                    b.Property<int>("TurnoAsignadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServicioAsignadoId");

                    b.HasIndex("TurnoAsignadoId");

                    b.ToTable("DetalleDelTurno");
                });

            modelBuilder.Entity("AcquaDiCane.Models.JornadaDiaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HoraFinal")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("PeluqueroCorrespondienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeluqueroCorrespondienteId");

                    b.ToTable("Jornadas");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Mascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Alergico")
                        .HasColumnType("bit");

                    b.Property<bool>("Castrado")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteAsignadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SinRaza")
                        .HasColumnType("bit");

                    b.Property<string>("Tamaño")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteAsignadoId");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("AcquaDiCane.Models.MetodoDePago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreDelMetodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MetodoDePago");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CuentaDestino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<string>("MercadoPagoPreferenceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MetodoDePagoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MetodoDePagoId");

                    b.HasIndex("TurnoId")
                        .IsUnique();

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Peluquero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Peluqueros");
                });

            modelBuilder.Entity("AcquaDiCane.Models.ReciboDePago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.Property<int>("PagoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PagoId")
                        .IsUnique();

                    b.ToTable("ReciboDePagos");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Duracion")
                        .HasColumnType("float");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("nombreServicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaHoraDelTurno")
                        .HasColumnType("datetime2");

                    b.Property<int>("MascotaAsignadaId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeluqueroAsignadoId")
                        .HasColumnType("int");

                    b.Property<double>("PrecioTotal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MascotaAsignadaId");

                    b.HasIndex("PeluqueroAsignadoId");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("AcquaDiCane.Models.DetalleDelTurno", b =>
                {
                    b.HasOne("AcquaDiCane.Models.Servicio", "ServicioAsignado")
                        .WithMany("Detalles")
                        .HasForeignKey("ServicioAsignadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcquaDiCane.Models.Turno", "TurnoAsignado")
                        .WithMany("Detalles")
                        .HasForeignKey("TurnoAsignadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServicioAsignado");

                    b.Navigation("TurnoAsignado");
                });

            modelBuilder.Entity("AcquaDiCane.Models.JornadaDiaria", b =>
                {
                    b.HasOne("AcquaDiCane.Models.Peluquero", "PeluqueroCorrespondiente")
                        .WithMany("JornadaSemanal")
                        .HasForeignKey("PeluqueroCorrespondienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeluqueroCorrespondiente");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Mascota", b =>
                {
                    b.HasOne("AcquaDiCane.Models.Cliente", "ClienteAsignado")
                        .WithMany("Mascotas")
                        .HasForeignKey("ClienteAsignadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteAsignado");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Pago", b =>
                {
                    b.HasOne("AcquaDiCane.Models.MetodoDePago", "MetodoDePago")
                        .WithMany("Pagos")
                        .HasForeignKey("MetodoDePagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcquaDiCane.Models.Turno", "Turno")
                        .WithOne("Pago")
                        .HasForeignKey("AcquaDiCane.Models.Pago", "TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MetodoDePago");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("AcquaDiCane.Models.ReciboDePago", b =>
                {
                    b.HasOne("AcquaDiCane.Models.Pago", "Pago")
                        .WithOne("ReciboDePago")
                        .HasForeignKey("AcquaDiCane.Models.ReciboDePago", "PagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Turno", b =>
                {
                    b.HasOne("AcquaDiCane.Models.Mascota", "MascotaAsignada")
                        .WithMany("Turnos")
                        .HasForeignKey("MascotaAsignadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcquaDiCane.Models.Peluquero", "PeluqueroAsignado")
                        .WithMany("Turnos")
                        .HasForeignKey("PeluqueroAsignadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MascotaAsignada");

                    b.Navigation("PeluqueroAsignado");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Cliente", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Mascota", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("AcquaDiCane.Models.MetodoDePago", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Pago", b =>
                {
                    b.Navigation("ReciboDePago")
                        .IsRequired();
                });

            modelBuilder.Entity("AcquaDiCane.Models.Peluquero", b =>
                {
                    b.Navigation("JornadaSemanal");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Servicio", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("AcquaDiCane.Models.Turno", b =>
                {
                    b.Navigation("Detalles");

                    b.Navigation("Pago")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
